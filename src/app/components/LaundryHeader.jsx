/**
 * This code was generated by Builder.io.
 */
'use client'
import Link from "next/link";
import * as React from "react";
import { authUserEmail } from "../server actions/server actions";
import { closeSession } from "../server actions/server actions";
import { FaUserTag, FaTimes} from "react-icons/fa";
import { useState, useEffect } from "react";
import { signOut, getAuth, onAuthStateChanged } from "firebase/auth";
import { doc, getDoc} from "firebase/firestore";

// import { auth } from "../firebase/firebaseConfig";
import { useRouter } from "next/navigation";
import { FaSpinner } from "react-icons/fa";
import { useTransition, useContext } from "react";
import { app, db } from "../firebase/firebaseConfig";
import { authContext } from "./AuthComponent";
import { usePathname } from "next/navigation";
import logo from '../../../public/imgs/logo_laundry.png'
import Image from "next/image";


export default function LaundryHeader() {
  const pathname = usePathname()
  const authO = useContext(authContext)

  const { user, setAuthObject, userA, A, setLoggedOut } = authO

  const auth = getAuth(app)

  const [isauth, setAuth] = useState(null)
  const [user_active, setUser] = useState(user)
  const [user_photo, setUserphoto] = useState(null)
  const [isPending, startTransition] = useTransition()
  const [isPendingProfile, startTransitionProfile] = useTransition()
  const [isPendingAuth, startTransitionAuth] = useTransition()
  const [isLoadingLogout, setIsLoadingLogout] = useState(false)
  const [isLoadingSignUp, setIsLoadingSignUp] = useState(false)
  const [active, setActive] = useState(false)
  const [toggle, setToggle] = useState(false)
  const [toggleMenu, setMenuToggle] = useState(false)



  // startTransitionProfile(async()=>{
  // onAuthStateChanged(auth, (currentUser) => {
  //   setUser(currentUser); 
  // });
  // })

  // const auth = getAuth(app)

  const router = useRouter()

  useEffect(()=>{
    
    const getcurrentUser = () =>{
      startTransitionProfile(async()=>{
        
          try{
            onAuthStateChanged(auth, async(currentUser) => {
              setAuth(currentUser)
              if (currentUser){
                const id = currentUser.uid
                const userRef = doc(db, 'users', id)
                const userRefsnapshot = await getDoc(userRef)
                if (userRefsnapshot.exists()){
                  const userdata = userRefsnapshot.data()
                  const { photoURL } = userdata
                  setUserphoto(photoURL)
                }
              }
            })
          }
          catch(err){
            console.error(err.message)
          }
      })
      
    }
    getcurrentUser()
  },[])

  const clearCookies = () => {
    document.cookie.split(";").forEach((c) => {
      document.cookie = c
        .replace(/^ +/, "")
        .replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/");
    });
  };

  
  const handleToggle = () =>{
    setToggle(!toggle)
  }

  const handleMenuToggle = () =>{
    setMenuToggle(!toggleMenu)
  }

  const clearAuth = () =>{
     startTransition(async()=>{
      // setIsLoadingLogout(true)
    let timerId
    try{
      clearCookies()
      await signOut(auth); 
      setAuthObject(prevState => ({ ...prevState, status: "User Logged Out"}));
      setLoggedOut(true)
      console.log(setAuthObject.status)
      await closeSession()
      console.log("User signed out")
      // timerId = setTimeout(()=>{setIsLoadingLogout(false);},7000)
    }
    catch(err){
      console.log(err)
    }
    
     })
    
  }

  return (
    <div
      className="bg-gray-900 w-full h-full box-border flex sticky top-0 z-30 flex-col shrink-0 px-5 shadow-md border-black border-solid min-h-[50px]"
      // maxWidth={1200}
      // lazyLoad={false}
    >
      <section className="sticky top-0 z-20 box-border flex-col grow shrink-0 self-stretch px-5 pb-2 mx-auto w-full shadow-2xl bg-gray-900 text-white border-black border-solid max-w-[1400px] min-h-[50px]">
        <div className="box-border flex relative flex-col shrink-0 mt-2 mr-auto w-full">
          <div className="flex gap-5 sticky top-0 z-20 max-md:flex-col max-md:gap-0">
            <div className="flex flex-col w-3/12 max-md:ml-0 max-md:w-full">
              <Image
                src={logo}
                loading="lazy"
                // srcSet="https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=100 100w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=200 200w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=400 400w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=800 800w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=1200 1200w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=1600 1600w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded?width=2000 2000w, https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Ffe4e5f3cc6494e3f9d1c3dd18cc1fded"
                className="box-border rounded-full object-cover overflow-hidden shrink-0 mt-0 mb-auto aspect-square h-[70px] min-h-[70px] min-w-[70px] w-[70px] max-md:w-16 max-md:h-16"
              />
            </div>
            <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full">
              <div className="box-border flex relative flex-col shrink-0 pr-2.5 mr-auto -ml-16 w-[500px] max-w-[700px] max-md:hidden max-sm:hidden">
                <div className="flex gap-5 max-md:flex-col max-md:gap-0">
                  <div className="flex flex-col w-3/12 max-md:ml-0 max-md:w-full">
                    <Link
                      //onClick={()=>{window.location.href='/'}}
                      href="/"
                      className={`${pathname==='/' && 'active' } box-border relative shrink-0 mx-auto mt-5 h-auto cursor-pointer pointer-events-auto`}
                    >
                      HOME
                    </Link>
                  </div>
                  <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full">
                    <Link
                      href="/services"
                      className={`${pathname==='/services' && 'active' } box-border relative shrink-0 mx-auto mt-5 h-auto cursor-pointer pointer-events-auto`}
                    >
                      SERVICES
                    </Link>
                  </div>
                  <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full">
                    <Link
                      href="/about"
                      className={`${pathname==='/about' && 'active' } box-border relative shrink-0 mx-auto mt-5 w-24 h-auto cursor-pointer pointer-events-auto`}
                    >
                      ABOUT US
                    </Link>
                  </div>
                  <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full">
                    <Link
                      href="/account"
                      className={`${pathname==='/account' && 'active' } box-border relative shrink-0 mx-auto mt-5 h-auto cursor-pointer pointer-events-auto`}
                    >
                      ACCOUNT
                    </Link>
                  </div>
                </div>
              </div>
            </div>
            <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full">
              <div className="box-border flex relative flex-col shrink-0 px-2.5 -mt-9 mr-auto mb-auto ml-40 max-w-[279px] w-[300px] max-lg:hidden max-sm:hidden">
                <div className="flex gap-5 max-md:flex-col max-md:gap-0">
                  <div className="flex flex-col w-6/12 max-md:ml-0 max-md:w-full">
                    <div className="box-border flex relative flex-col shrink-0 mt-5">
                      <div className="flex gap-5 max-md:flex-col max-md:gap-0">
                        <div className="flex flex-col w-[120px] max-md:ml-0 max-md:w-full">
                          <Link
                            href={'/signup'}
                            className="box-border relative shrink-0 px-6 py-2 mt-7 text-center border border-[#1665F8] rounded appearance-none cursor-pointer bg-[white] text-[#1665F8] hover:bg-[#1665F8] transition-all hover:text-white "
                           
                            disabled={isLoadingSignUp}
                          >
                            {isLoadingSignUp? <FaSpinner className="animate-spin mx-auto"/> : 'Sign Up'}
                          </Link>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="flex flex-col ml-5 w-6/12 max-md:ml-0 max-md:w-full">
                    <div className="box-border flex relative flex-col shrink-0 mt-5">
                      <div className="flex gap-5 max-md:flex-col max-md:gap-0">

                        
                        {(userA)? 
                          <div className="flex flex-col w-full max-md:ml-0 max-md:w-full">
                            <Link
                            onClick={clearAuth}
                            href={'/login'}
                            disabled={isPending}
                              className="box-border relative shrink-0 px-6 py-2 mt-7 w-[100px] text-center rounded border border-[#1665F8] appearance-none cursor-pointer text-[white] bg-[#1665F8] hover:text-[#1665F8] transition-all hover:bg-white "
                              // openLinkInNewTab={false}
                            >
                              {isPending ? <FaSpinner className="animate-spin mx-auto w-[20px] h-[20px]"/> : 'Logout'}
                              
                            </Link>
                          </div> :
                          <div className="flex flex-col w-full max-md:ml-0 max-md:w-full">
                            <Link
                            href={'/login'}
                              className="box-border relative shrink-0 px-6 py-2 mt-7 text-center rounded border border-[#1665F8] appearance-none cursor-pointer text-[white] bg-[#1665F8] hover:text-[#1665F8] transition-all hover:bg-white "
                              // openLinkInNewTab={false}
                            >
                              Login
                            </Link>  
                        </div>}
                          
                        <div className="flex flex-col w-full max-md:ml-0 max-md:w-full">
                            {!(userA )? <FaUserTag className="mt-6 rounded-full border shadow-lg" size={50}/>:
                            
                            <button
                            onClick={handleToggle}
                            //onClick={async()=>{ clearAuth(); await closeSession(); window.location.href='/login'; console.log(user, isauth, auth)}}
                            disabled={isPendingProfile}
                            // href={'/login'}
                              className=" box-border relative text-4xl flex items-center h-[50px] w-[50px] justify-center shrink-0 px-6 py-4 mt-7 rounded-full text-center border border-[#1665F8] appearance-none cursor-pointer text-[black] hover:text-[#1665F8] transition-all"
                              onMouseOver={()=>setActive(true)}
                              onMouseOut={()=>setActive(false)}
                              
                            >
                              {/* {console.log(userA && userA)} */}
                              {isPendingProfile? <FaSpinner className="animate-spin mx-auto fill-white w-[100%] h-[50px]"/>: //: `${user === null? "" : user && (user?.email) && (user?.email)[0].toUpperCase()}`}
                              <div className={` flex items-center justify-center text-center border top-0 border-white rounded-2xl black bg-[#082f49] text-white`}>
                                  {!toggle ? <img src={user_photo} className="absolute w-[50px] h-[50px] overflow-hidden rounded-full" width={50} height={50} alt="pic"/>
                                  :
                                  <p className="rounded-full px-5 py-3 absolute text-xl overflow-hidden bg-[#082f49]">{user && (user?.email) && (user?.email)[0].toUpperCase()}</p>
                                  // :<p
                                  //  onClick={handleToggle}
                                  //onClick={async()=>{ clearAuth(); await closeSession(); window.location.href='/login'}}
                                  // className="w-auto relative text-[14px] text-center py-4 px-6 border border-black mx-auto rounded-xl text-white"></p>
                                  /* //{user && (user?.email) && (user?.email.toString().slice(0,7).toUpperCase())}</p> */
                                  }
                              </div>}
                            </button>
                              }  
                        </div>

                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className="flex flex-col ml-5 w-3/12 max-md:ml-0 max-md:w-full ">
              <div className="box-border flex relative flex-col shrink-0 px-2.5 -mt-9 mr-auto mb-auto ml-28 w-full max-w-[273px] xsm:max-sm:-mt-8">
                <div className="flex gap-5 max-md:flex-col max-md:gap-0" />
              </div>
              <div className="relative h-full w-full rounded-md shadow-md flex items-center justify-end xsm:max-sm:-mt-8 lg:max-2xl:hidden">
                <div className="">
                <img
                  onClick={handleMenuToggle}
                  loading="lazy"
                  src="https://cdn.builder.io/api/v1/image/assets%2F661e1fa212c74d1c94d19e320025bbf6%2Fc55a5ccdcf7e4373a29a84e42a4eb224"
                  className="box-border cursor-pointer object-cover overflow-hidden shrink-0 mb-auto ml-auto w-full aspect-[0.99] max-w-[32px] min-h-[20px] min-w-[20px] hidden max-lg:block lg:max-2xl:hidden max-md:mb-auto xsm:max-sm:-mt-12 sm:max-md:-mt-12"
                />
                </div>
                {toggleMenu && 
                <ul className="bg-white text-black p-8 absolute top-0 right-0 flex flex-col items-end gap-4 sm:max-2xl:top-[100%]">
                    <button onClick={()=>handleMenuToggle(false)} className="float-right"><FaTimes/></button>
                    <li><Link className={`${pathname==='/' && 'active' } hidden xsm:max-[500px]:block`} href={'/'}>HOME</Link></li>
                    <li><Link className={`${pathname==='/services' && 'active' } hidden xsm:max-sm:block` } href={'/services'}>SERVICES</Link></li>
                    <li><Link className={`${pathname==='/about' && 'active' } hidden xsm:max-[700px]:block`} href={'/about'}>ABOUT US</Link></li>
                    <li><Link className={`${pathname==='/account' && 'active'} hidden xsm:max-md:block`} href={'/account'}>ACCOUNT</Link></li>

                    <button><Link className={`${pathname==='/account' && 'active'} hidden xsm:max-md:block`} href={'/signup'}>Sign Up</Link></button>
                    {userA ? <button><Link className={`${pathname==='/account' && 'active'} hidden xsm:max-md:block`} href={'/login'}>Logout</Link></button>
                    : <button><Link className={`${pathname==='/account' && 'active'} hidden xsm:max-md:block`} href={'/login'}>Login</Link></button>
                    }
                    </ul>
                }
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}
